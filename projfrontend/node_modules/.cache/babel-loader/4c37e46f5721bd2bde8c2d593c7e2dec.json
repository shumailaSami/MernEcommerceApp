{"ast":null,"code":"import { API } from \"../../backend\"; //category calls\n\nexport const createCategory = (userId, token, category) => {\n  return fetch(`${API}/category/create/${userId}`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(category)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n}; //get all categories\n\nexport const getCategories = () => {\n  return fetch(`${API}/categories`, {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n}; //products calls\n//create a product \n\nexport const createaProduct = (userId, token, product) => {\n  return fetch(`${API}/product/create/${userId}`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: product\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n}; //get all products\n\nexport const getProducts = () => {\n  return fetch(`${API}/products`, {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n}; //delete a product\n//get a product\n\nexport const getProduct = productId => {\n  return fetch(`${API}/product/${productId}`, {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n}; //update a product","map":{"version":3,"sources":["D:/2020Projects/mernEcommerceProj/projfrontend/src/admin/helper/adminapicall.js"],"names":["API","createCategory","userId","token","category","fetch","method","headers","Accept","Authorization","body","JSON","stringify","then","response","json","catch","err","console","log","getCategories","createaProduct","product","getProducts","getProduct","productId"],"mappings":"AAAA,SAASA,GAAT,QAAoB,eAApB,C,CAGA;;AACA,OAAO,MAAMC,cAAc,GAAG,CAACC,MAAD,EAASC,KAAT,EAAgBC,QAAhB,KAA6B;AACzD,SAAOC,KAAK,CAAE,GAAEL,GAAI,oBAAmBE,MAAO,EAAlC,EAAqC;AAC/CI,IAAAA,MAAM,EAAE,MADuC;AAE/CC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE,kBADD;AAEP,sBAAgB,kBAFT;AAGPC,MAAAA,aAAa,EAAG,UAASN,KAAM;AAHxB,KAFsC;AAO/CO,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,QAAf;AAPyC,GAArC,CAAL,CASJS,IATI,CASCC,QAAQ,IAAI;AAChB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,GAXI,EAYJC,KAZI,CAYEC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAZT,CAAP;AAaD,CAdM,C,CAiBP;;AACA,OAAO,MAAMG,aAAa,GAAG,MAAK;AAChC,SAAOf,KAAK,CAAE,GAAEL,GAAI,aAAR,EAAqB;AAC/BM,IAAAA,MAAM,EAAC;AADwB,GAArB,CAAL,CAEJO,IAFI,CAECC,QAAQ,IAAI;AAClB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,GAJM,EAKNC,KALM,CAKAC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CALP,CAAP;AAMD,CAPM,C,CASP;AAEA;;AACA,OAAO,MAAMI,cAAc,GAAG,CAACnB,MAAD,EAAQC,KAAR,EAAcmB,OAAd,KAA0B;AACtD,SAAOjB,KAAK,CAAE,GAAEL,GAAI,mBAAkBE,MAAO,EAAjC,EAAmC;AAC7CI,IAAAA,MAAM,EAAC,MADsC;AAE7CC,IAAAA,OAAO,EAAC;AACNC,MAAAA,MAAM,EAAE,kBADF;AAENC,MAAAA,aAAa,EAAG,UAASN,KAAM;AAFzB,KAFqC;AAM7CO,IAAAA,IAAI,EAAEY;AANuC,GAAnC,CAAL,CAOJT,IAPI,CAOCC,QAAQ,IAAI;AAClB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,GATM,EAUNC,KAVM,CAUAC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAVP,CAAP;AAWD,CAZM,C,CAcP;;AACA,OAAO,MAAMM,WAAW,GAAG,MAAK;AAC9B,SAAOlB,KAAK,CAAE,GAAEL,GAAI,WAAR,EAAmB;AAC7BM,IAAAA,MAAM,EAAC;AADsB,GAAnB,CAAL,CAEJO,IAFI,CAECC,QAAQ,IAAI;AAClB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,GAJM,EAKNC,KALM,CAKAC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CALP,CAAP;AAMD,CAPM,C,CASP;AAEA;;AACA,OAAO,MAAMO,UAAU,GAAGC,SAAS,IAAI;AACrC,SAAOpB,KAAK,CAAE,GAAEL,GAAI,YAAWyB,SAAU,EAA7B,EAA+B;AACzCnB,IAAAA,MAAM,EAAC;AADkC,GAA/B,CAAL,CAEJO,IAFI,CAECC,QAAQ,IAAI;AAClB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,GAJM,EAKNC,KALM,CAKAC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CALP,CAAP;AAOD,CARM,C,CAUP","sourcesContent":["import { API } from \"../../backend\";\n\n\n//category calls\nexport const createCategory = (userId, token, category) => {\n  return fetch(`${API}/category/create/${userId}`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(category)\n  })\n    .then(response => {\n      return response.json();\n    })\n    .catch(err => console.log(err));\n};\n\n\n//get all categories\nexport const getCategories = () =>{\n  return fetch(`${API}/categories`,{\n    method:\"GET\"\n  }).then(response => {\n    return response.json()\n  })\n  .catch(err => console.log(err))\n}\n\n//products calls\n\n//create a product \nexport const createaProduct = (userId,token,product) => {\n  return fetch(`${API}/product/create/${userId}`,{\n    method:\"POST\" ,\n    headers:{      \n      Accept: \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: product\n  }).then(response => {\n    return response.json()\n  })\n  .catch(err => console.log(err))\n}\n\n//get all products\nexport const getProducts = () =>{\n  return fetch(`${API}/products`,{\n    method:\"GET\"\n  }).then(response => {\n    return response.json()\n  })\n  .catch(err => console.log(err))\n}\n\n//delete a product\n\n//get a product\nexport const getProduct = productId => {\n  return fetch(`${API}/product/${productId}`,{\n    method:\"GET\"\n  }).then(response => {\n    return response.json()\n  })\n  .catch(err => console.log(err))\n\n}\n\n//update a product"]},"metadata":{},"sourceType":"module"}